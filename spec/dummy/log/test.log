  [1m[35m (201.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "dummy_test"[0m
  [1m[35m (494.2ms)[0m  [1m[35mCREATE DATABASE "dummy_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "buying_groups" CASCADE[0m
  [1m[35m (9.4ms)[0m  [1m[35mCREATE TABLE "buying_groups" ("id" bigserial primary key, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "customers" CASCADE[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "customers" ("id" bigserial primary key, "name" character varying, "buying_group_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_customers_on_buying_group_id" ON "customers"  ("buying_group_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "notes" CASCADE[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "notes" ("id" bigserial primary key, "message" text, "notable_id" integer, "notable_type" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_id" ON "notes"  ("notable_id")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_type" ON "notes"  ("notable_type")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "order_items" CASCADE[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "order_items" ("id" bigserial primary key, "quantity" integer, "order_id" bigint, "product_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_order_id" ON "order_items"  ("order_id")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_product_id" ON "order_items"  ("product_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "orders" CASCADE[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "orders" ("id" bigserial primary key, "customer_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_orders_on_customer_id" ON "orders"  ("customer_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "amount" decimal, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20200311225906)[0m
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20200311225549),
(20200311225632),
(20200311225709),
(20200311225812),
(20200311225845);

[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (1.1ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2020-03-11 23:12:24.148607"], ["updated_at", "2020-03-11 23:12:24.148607"]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "schema_sha1"], ["value", "bc3363f6409fe0aa7ba30ce90342e8ec6e22498a"], ["created_at", "2020-03-11 23:12:24.152733"], ["updated_at", "2020-03-11 23:12:24.152733"]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------
BuyingGroupTest: test_the_truth
-------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (1.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------
OrderTest: test_builds_hierarchy
--------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------
OrderTest: test_builds_hierarchy
--------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------
OrderTest: test_builds_hierarchy
--------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------
OrderTest: test_builds_hierarchy
--------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------
ProductTest: test_builds_hierarchy
----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------
ProductTest: test_builds_hierarchy
----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------
ProductTest: test_builds_hierarchy
----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------
ProductTest: test_builds_hierarchy
----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------
ProductTest: test_only_include
------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------
ProductTest: test_only_include
------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------
ProductTest: test_builds_hierarchy
----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------
BuyingGroupTest: test_builds_hierarchy
--------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------
BuyingGroupTest: test_builds_hierarchy
--------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------
CustomerTest: test_builds_hierarchy
-----------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
OrderItemTest: test_builds_hierarchy_with_a_parent
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------
OrderItemTest: test_builds_hierarchy
------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------
OrderTest: test_builds_hierarchy
--------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------
ProductTest: test_builds_hierarchy
----------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------
ProductTest: test_only_include
------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (4.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
Started GET "/related_changes?type=Customer" for 127.0.0.1 at 2020-03-13 10:30:23 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer"}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms | Allocations: 4344)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
Started GET "/related_changes?type=Customer" for 127.0.0.1 at 2020-03-13 10:31:05 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer"}
  [1m[35m (4.4ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
Completed 500 Internal Server Error in 27ms (ActiveRecord: 4.4ms | Allocations: 5924)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (199.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "dummy_test"[0m
  [1m[35m (491.5ms)[0m  [1m[35mCREATE DATABASE "dummy_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "buying_groups" CASCADE[0m
  [1m[35m (6.8ms)[0m  [1m[35mCREATE TABLE "buying_groups" ("id" bigserial primary key, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "customers" CASCADE[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "customers" ("id" bigserial primary key, "name" character varying, "buying_group_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_customers_on_buying_group_id" ON "customers"  ("buying_group_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "notes" CASCADE[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "notes" ("id" bigserial primary key, "message" text, "notable_id" integer, "notable_type" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_id" ON "notes"  ("notable_id")[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_type" ON "notes"  ("notable_type")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "order_items" CASCADE[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "order_items" ("id" bigserial primary key, "quantity" integer, "order_id" bigint, "product_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_order_id" ON "order_items"  ("order_id")[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_product_id" ON "order_items"  ("product_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "orders" CASCADE[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "orders" ("id" bigserial primary key, "customer_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_orders_on_customer_id" ON "orders"  ("customer_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "amount" decimal, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "versions" CASCADE[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "versions" ("id" bigserial primary key, "item_type" character varying NOT NULL, "item_id" bigint NOT NULL, "event" character varying NOT NULL, "whodunnit" character varying, "object" jsonb, "object_changes" jsonb, "created_at" timestamp)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_versions_on_item_type_and_item_id" ON "versions"  ("item_type", "item_id")[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20200313173210)[0m
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20200311225549),
(20200311225632),
(20200311225709),
(20200311225812),
(20200311225845),
(20200311225906);

[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2020-03-13 17:35:24.877812"], ["updated_at", "2020-03-13 17:35:24.877812"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "schema_sha1"], ["value", "7c87bea2b885d2246b0f4fa3bbe29af96ae9a5d9"], ["created_at", "2020-03-13 17:35:24.881037"], ["updated_at", "2020-03-13 17:35:24.881037"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
Started GET "/related_changes?type=Customer" for 127.0.0.1 at 2020-03-13 10:35:25 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer"}
  [1m[35m (4.4ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
Completed 500 Internal Server Error in 34ms (ActiveRecord: 4.4ms | Allocations: 5924)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (207.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "dummy_test"[0m
  [1m[35m (477.5ms)[0m  [1m[35mCREATE DATABASE "dummy_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (16.7ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "pgcrypto"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35mSQL (3.1ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "uuid-ossp"[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "buying_groups" CASCADE[0m
  [1m[35m (10.2ms)[0m  [1m[35mCREATE TABLE "buying_groups" ("id" bigserial primary key, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "customers" CASCADE[0m
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "customers" ("id" bigserial primary key, "name" character varying, "buying_group_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_customers_on_buying_group_id" ON "customers"  ("buying_group_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "notes" CASCADE[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "notes" ("id" bigserial primary key, "message" text, "notable_id" integer, "notable_type" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_id" ON "notes"  ("notable_id")[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_type" ON "notes"  ("notable_type")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "order_items" CASCADE[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "order_items" ("id" bigserial primary key, "quantity" integer, "order_id" bigint, "product_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_order_id" ON "order_items"  ("order_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_product_id" ON "order_items"  ("product_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "orders" CASCADE[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "orders" ("id" bigserial primary key, "customer_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_orders_on_customer_id" ON "orders"  ("customer_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  [1m[35m (7.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "amount" decimal, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "versions" CASCADE[0m
  [1m[35m (8.4ms)[0m  [1m[35mCREATE TABLE "versions" ("id" bigserial primary key, "item_type" character varying NOT NULL, "item_id" bigint NOT NULL, "event" character varying NOT NULL, "whodunnit" character varying, "object" jsonb, "object_changes" jsonb, "request_id" uuid DEFAULT gen_random_uuid(), "created_at" timestamp)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_versions_on_item_type_and_item_id" ON "versions"  ("item_type", "item_id")[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20200313173210)[0m
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20200311225549),
(20200311225632),
(20200311225709),
(20200311225812),
(20200311225845),
(20200311225906);

[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (2.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2020-03-13 17:37:16.514465"], ["updated_at", "2020-03-13 17:37:16.514465"]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "schema_sha1"], ["value", "fe02087a3f82e9dfbb1e671a6eb620bd4f158f64"], ["created_at", "2020-03-13 17:37:16.520741"], ["updated_at", "2020-03-13 17:37:16.520741"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
Started GET "/related_changes?type=Customer" for 127.0.0.1 at 2020-03-13 10:37:16 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer"}
  [1m[35m (10.1ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
Completed 500 Internal Server Error in 39ms (ActiveRecord: 10.1ms | Allocations: 5924)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
Started GET "/related_changes?type=Customer&id" for 127.0.0.1 at 2020-03-13 10:37:45 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>nil}
  [1m[35m (1.4ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = ''
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
Completed 500 Internal Server Error in 8ms (ActiveRecord: 1.4ms | Allocations: 3811)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (2.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:39:12.139200"], ["updated_at", "2020-03-13 17:39:12.139200"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (3.2ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 1], ["created_at", "2020-03-13 17:39:12.152398"], ["updated_at", "2020-03-13 17:39:12.152398"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/related_changes?type=Customer&id=1" for 127.0.0.1 at 2020-03-13 10:39:12 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"1"}
  [1m[35m (2.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
Completed 500 Internal Server Error in 9ms (ActiveRecord: 2.8ms | Allocations: 3809)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (208.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "dummy_test"[0m
  [1m[35m (422.6ms)[0m  [1m[35mCREATE DATABASE "dummy_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "buying_groups" CASCADE[0m
  [1m[35m (10.8ms)[0m  [1m[35mCREATE TABLE "buying_groups" ("id" bigserial primary key, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "customers" CASCADE[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "customers" ("id" bigserial primary key, "name" character varying, "buying_group_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_customers_on_buying_group_id" ON "customers"  ("buying_group_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "notes" CASCADE[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "notes" ("id" bigserial primary key, "message" text, "notable_id" integer, "notable_type" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_id" ON "notes"  ("notable_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_type" ON "notes"  ("notable_type")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "order_items" CASCADE[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "order_items" ("id" bigserial primary key, "quantity" integer, "order_id" bigint, "product_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_order_id" ON "order_items"  ("order_id")[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_product_id" ON "order_items"  ("product_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "orders" CASCADE[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "orders" ("id" bigserial primary key, "customer_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_orders_on_customer_id" ON "orders"  ("customer_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "amount" decimal, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20200311225906)[0m
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20200311225549),
(20200311225632),
(20200311225709),
(20200311225812),
(20200311225845);

[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2020-03-13 17:40:13.574057"], ["updated_at", "2020-03-13 17:40:13.574057"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "schema_sha1"], ["value", "bc3363f6409fe0aa7ba30ce90342e8ec6e22498a"], ["created_at", "2020-03-13 17:40:13.577987"], ["updated_at", "2020-03-13 17:40:13.577987"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (208.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "dummy_test"[0m
  [1m[35m (430.8ms)[0m  [1m[35mCREATE DATABASE "dummy_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (17.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "pgcrypto"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35mSQL (3.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "uuid-ossp"[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "buying_groups" CASCADE[0m
  [1m[35m (9.0ms)[0m  [1m[35mCREATE TABLE "buying_groups" ("id" bigserial primary key, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "customers" CASCADE[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "customers" ("id" bigserial primary key, "name" character varying, "buying_group_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_customers_on_buying_group_id" ON "customers"  ("buying_group_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "notes" CASCADE[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "notes" ("id" bigserial primary key, "message" text, "notable_id" integer, "notable_type" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_id" ON "notes"  ("notable_id")[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_notes_on_notable_type" ON "notes"  ("notable_type")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "order_items" CASCADE[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "order_items" ("id" bigserial primary key, "quantity" integer, "order_id" bigint, "product_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_order_id" ON "order_items"  ("order_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_order_items_on_product_id" ON "order_items"  ("product_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "orders" CASCADE[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "orders" ("id" bigserial primary key, "customer_id" bigint, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_orders_on_customer_id" ON "orders"  ("customer_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "amount" decimal, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "versions" CASCADE[0m
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "versions" ("id" bigserial primary key, "item_type" character varying NOT NULL, "item_id" character varying NOT NULL, "event" character varying NOT NULL, "whodunnit" character varying, "object" jsonb, "object_changes" jsonb, "request_id" uuid DEFAULT gen_random_uuid(), "created_at" timestamp)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_versions_on_item_type_and_item_id" ON "versions"  ("item_type", "item_id")[0m
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20200313173210)[0m
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20200311225549),
(20200311225632),
(20200311225709),
(20200311225812),
(20200311225845),
(20200311225906);

[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2020-03-13 17:40:32.340448"], ["updated_at", "2020-03-13 17:40:32.340448"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "schema_sha1"], ["value", "76751140be9ffbb42f306ec21b5c6ad92a210f31"], ["created_at", "2020-03-13 17:40:32.344561"], ["updated_at", "2020-03-13 17:40:32.344561"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (0.6ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:40:32.439189"], ["updated_at", "2020-03-13 17:40:32.439189"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 1], ["created_at", "2020-03-13 17:40:32.452236"], ["updated_at", "2020-03-13 17:40:32.452236"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/related_changes?type=Customer&id=1" for 127.0.0.1 at 2020-03-13 10:40:32 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"1"}
  [1m[35m (8.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>1' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '1'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "1"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 19ms (ActiveRecord: 10.2ms | Allocations: 5068)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:42:50.601119"], ["updated_at", "2020-03-13 17:42:50.601119"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 2], ["created_at", "2020-03-13 17:42:50.614609"], ["updated_at", "2020-03-13 17:42:50.614609"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/related_changes?type=Customer&id=2" for 127.0.0.1 at 2020-03-13 10:42:50 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"2"}
  [1m[35m (5.0ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>2' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '2'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>2' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '2'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>2' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '2'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>2' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '2'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>2' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '2'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>2' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '2'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "2"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 18ms (ActiveRecord: 6.4ms | Allocations: 5068)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:45:07.795294"], ["updated_at", "2020-03-13 17:45:07.795294"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 3], ["created_at", "2020-03-13 17:45:07.808718"], ["updated_at", "2020-03-13 17:45:07.808718"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:45:19.569085"], ["updated_at", "2020-03-13 17:45:19.569085"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 4], ["created_at", "2020-03-13 17:45:19.582525"], ["updated_at", "2020-03-13 17:45:19.582525"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/related_changes?type=Customer&id=4" for 127.0.0.1 at 2020-03-13 10:45:19 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"4"}
  [1m[35m (4.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>4' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '4'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>4' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '4'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>4' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '4'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>4' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '4'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>4' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '4'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>4' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '4'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "4"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 16ms (ActiveRecord: 5.7ms | Allocations: 5140)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (0.6ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:45:58.138658"], ["updated_at", "2020-03-13 17:45:58.138658"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 5], ["created_at", "2020-03-13 17:45:58.150503"], ["updated_at", "2020-03-13 17:45:58.150503"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/related_changes?type=Customer&id=5" for 127.0.0.1 at 2020-03-13 10:45:58 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"5"}
  [1m[35m (4.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>5' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '5'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>5' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '5'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>5' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '5'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>5' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '5'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>5' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '5'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>5' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '5'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "5"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 15ms (ActiveRecord: 6.0ms | Allocations: 5140)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------
RequestsTest: test_login
------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBuyingGroup Create (0.6ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 17:48:02.136496"], ["updated_at", "2020-03-13 17:48:02.136496"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 6], ["created_at", "2020-03-13 17:48:02.150642"], ["updated_at", "2020-03-13 17:48:02.150642"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/related_changes?type=Customer&id=6" for 127.0.0.1 at 2020-03-13 10:48:02 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"6"}
  [1m[35m (5.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>6' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '6'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>6' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '6'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>6' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '6'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>6' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '6'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>6' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '6'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>6' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '6'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "6"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 21ms (ActiveRecord: 7.7ms | Allocations: 5138)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:10:49.249162"], ["updated_at", "2020-03-13 18:10:49.249162"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 7], ["created_at", "2020-03-13 18:10:49.265305"], ["updated_at", "2020-03-13 18:10:49.265305"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:11:34.432942"], ["updated_at", "2020-03-13 18:11:34.432942"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 8], ["created_at", "2020-03-13 18:11:34.449216"], ["updated_at", "2020-03-13 18:11:34.449216"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:11:48.222319"], ["updated_at", "2020-03-13 18:11:48.222319"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 9], ["created_at", "2020-03-13 18:11:48.234679"], ["updated_at", "2020-03-13 18:11:48.234679"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:12:23.155632"], ["updated_at", "2020-03-13 18:12:23.155632"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 10], ["created_at", "2020-03-13 18:12:23.169987"], ["updated_at", "2020-03-13 18:12:23.169987"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=10" for 127.0.0.1 at 2020-03-13 11:12:23 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"10"}
  [1m[35m (3.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>10' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '10'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>10' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '10'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>10' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '10'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>10' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '10'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>10' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '10'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>10' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '10'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "10"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 15ms (ActiveRecord: 5.0ms | Allocations: 5138)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:13:22.377690"], ["updated_at", "2020-03-13 18:13:22.377690"]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 11], ["created_at", "2020-03-13 18:13:22.392300"], ["updated_at", "2020-03-13 18:13:22.392300"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=11" for 127.0.0.1 at 2020-03-13 11:13:22 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"11"}
  [1m[35m (4.4ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>11' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '11'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>11' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '11'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>11' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '11'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>11' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '11'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>11' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '11'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>11' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '11'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "11"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 15ms (ActiveRecord: 5.8ms | Allocations: 5425)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:13:40.728622"], ["updated_at", "2020-03-13 18:13:40.728622"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 12], ["created_at", "2020-03-13 18:13:40.741789"], ["updated_at", "2020-03-13 18:13:40.741789"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=12" for 127.0.0.1 at 2020-03-13 11:13:40 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"12"}
  [1m[35m (3.7ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>12' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '12'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>12' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '12'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>12' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '12'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>12' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '12'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>12' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '12'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>12' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '12'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.1ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "12"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 22ms (ActiveRecord: 4.8ms | Allocations: 5428)
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:14:01.460743"], ["updated_at", "2020-03-13 18:14:01.460743"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 13], ["created_at", "2020-03-13 18:14:01.472759"], ["updated_at", "2020-03-13 18:14:01.472759"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=13" for 127.0.0.1 at 2020-03-13 11:14:01 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"13"}
  [1m[35m (3.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.1ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "13"], ["LIMIT", 1]]
  [1m[35m (2.9ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>13' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '13'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mCACHE PaperTrail::Version Load (0.0ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "13"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 89937ms (ActiveRecord: 7.2ms | Allocations: 15599)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:15:34.538028"], ["updated_at", "2020-03-13 18:15:34.538028"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 14], ["created_at", "2020-03-13 18:15:34.550574"], ["updated_at", "2020-03-13 18:15:34.550574"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=14" for 127.0.0.1 at 2020-03-13 11:15:34 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"14"}
  [1m[35m (3.7ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>14' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '14'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>14' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '14'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>14' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '14'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>14' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '14'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>14' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '14'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>14' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '14'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "14"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 59620ms (ActiveRecord: 4.8ms | Allocations: 10825)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:16:37.961270"], ["updated_at", "2020-03-13 18:16:37.961270"]]
  [1m[36mPaperTrail::Version Create (5.6ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "15"], ["event", "create"], ["object_changes", "{\"id\":[null,15],\"created_at\":[null,\"2020-03-13T18:16:37.961Z\"],\"updated_at\":[null,\"2020-03-13T18:16:37.961Z\"]}"], ["created_at", "2020-03-13 18:16:37.961270"]]
  [1m[35m (4.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 15], ["created_at", "2020-03-13 18:16:38.000674"], ["updated_at", "2020-03-13 18:16:38.000674"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "15"], ["event", "create"], ["object_changes", "{\"id\":[null,15],\"buying_group_id\":[null,15],\"created_at\":[null,\"2020-03-13T18:16:38.000Z\"],\"updated_at\":[null,\"2020-03-13T18:16:38.000Z\"]}"], ["created_at", "2020-03-13 18:16:38.000674"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=15" for 127.0.0.1 at 2020-03-13 11:16:38 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"15"}
  [1m[35m (4.0ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>15' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '15'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>15' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '15'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>15' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '15'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>15' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '15'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>15' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '15'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>15' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '15'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "15"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 9382ms (ActiveRecord: 4.5ms | Allocations: 17631)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2735718569030447490)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20200313181749)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "created_at" timestamp(6) NOT NULL, "updated_at" timestamp(6) NOT NULL)[0m
  [1m[36mprimary::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20200313181749"]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2735718569030447490)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (1.1ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 18:19:10.594235"], ["updated_at", "2020-03-13 18:19:10.594235"]]
  [1m[36mPaperTrail::Version Create (3.7ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "1"], ["event", "create"], ["object_changes", "{\"id\":[null,1],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T18:19:10.594Z\"],\"updated_at\":[null,\"2020-03-13T18:19:10.594Z\"]}"], ["created_at", "2020-03-13 18:19:10.594235"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:19:10.650205"], ["updated_at", "2020-03-13 18:19:10.650205"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "16"], ["event", "create"], ["object_changes", "{\"id\":[null,16],\"created_at\":[null,\"2020-03-13T18:19:10.650Z\"],\"updated_at\":[null,\"2020-03-13T18:19:10.650Z\"]}"], ["created_at", "2020-03-13 18:19:10.650205"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 16], ["created_at", "2020-03-13 18:19:10.663453"], ["updated_at", "2020-03-13 18:19:10.663453"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "16"], ["event", "create"], ["object_changes", "{\"id\":[null,16],\"buying_group_id\":[null,16],\"created_at\":[null,\"2020-03-13T18:19:10.663Z\"],\"updated_at\":[null,\"2020-03-13T18:19:10.663Z\"]}"], ["created_at", "2020-03-13 18:19:10.663453"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=16" for 127.0.0.1 at 2020-03-13 11:19:10 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"16"}
  [1m[35m (4.4ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>16' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '16'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>16' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '16'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>16' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '16'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>16' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '16'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>16' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '16'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>16' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '16'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "16"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
Completed 500 Internal Server Error in 22ms (ActiveRecord: 4.9ms | Allocations: 6725)
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 18:21:52.095952"], ["updated_at", "2020-03-13 18:21:52.095952"]]
  [1m[36mPaperTrail::Version Create (3.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "2"], ["event", "create"], ["object_changes", "{\"id\":[null,2],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T18:21:52.095Z\"],\"updated_at\":[null,\"2020-03-13T18:21:52.095Z\"]}"], ["created_at", "2020-03-13 18:21:52.095952"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.8ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 18:21:52.135112"], ["updated_at", "2020-03-13 18:21:52.135112"]]
  [1m[36mPaperTrail::Version Create (0.6ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "17"], ["event", "create"], ["object_changes", "{\"id\":[null,17],\"created_at\":[null,\"2020-03-13T18:21:52.135Z\"],\"updated_at\":[null,\"2020-03-13T18:21:52.135Z\"]}"], ["created_at", "2020-03-13 18:21:52.135112"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 17], ["created_at", "2020-03-13 18:21:52.168818"], ["updated_at", "2020-03-13 18:21:52.168818"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "17"], ["event", "create"], ["object_changes", "{\"id\":[null,17],\"buying_group_id\":[null,17],\"created_at\":[null,\"2020-03-13T18:21:52.168Z\"],\"updated_at\":[null,\"2020-03-13T18:21:52.168Z\"]}"], ["created_at", "2020-03-13 18:21:52.168818"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=17" for 127.0.0.1 at 2020-03-13 11:21:52 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"17"}
  [1m[35m (5.2ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>17' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '17'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>17' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '17'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>17' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '17'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>17' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '17'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>17' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '17'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>17' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '17'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "17"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 8 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "17"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
Completed 500 Internal Server Error in 36ms (ActiveRecord: 6.3ms | Allocations: 9444)
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (1.1ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:41:45.865478"], ["updated_at", "2020-03-13 20:41:45.865478"]]
  [1m[36mPaperTrail::Version Create (12.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "3"], ["event", "create"], ["object_changes", "{\"id\":[null,3],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:41:45.865Z\"],\"updated_at\":[null,\"2020-03-13T20:41:45.865Z\"]}"], ["created_at", "2020-03-13 20:41:45.865478"]]
  [1m[35m (4.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.8ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:41:45.912834"], ["updated_at", "2020-03-13 20:41:45.912834"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "18"], ["event", "create"], ["object_changes", "{\"id\":[null,18],\"created_at\":[null,\"2020-03-13T20:41:45.912Z\"],\"updated_at\":[null,\"2020-03-13T20:41:45.912Z\"]}"], ["created_at", "2020-03-13 20:41:45.912834"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (1.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 18], ["created_at", "2020-03-13 20:41:45.938539"], ["updated_at", "2020-03-13 20:41:45.938539"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "18"], ["event", "create"], ["object_changes", "{\"id\":[null,18],\"buying_group_id\":[null,18],\"created_at\":[null,\"2020-03-13T20:41:45.938Z\"],\"updated_at\":[null,\"2020-03-13T20:41:45.938Z\"]}"], ["created_at", "2020-03-13 20:41:45.938539"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=18" for 127.0.0.1 at 2020-03-13 13:41:45 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"18"}
  [1m[35m (10.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>18' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '18'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>18' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '18'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>18' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '18'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>18' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '18'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>18' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '18'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>18' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '18'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "18"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 11 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "18"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.6ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:41:45.938539' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "18"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 10 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "18"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
Completed 200 OK in 33ms (Views: 0.3ms | ActiveRecord: 13.1ms | Allocations: 8371)
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:42:56.468894"], ["updated_at", "2020-03-13 20:42:56.468894"]]
  [1m[36mPaperTrail::Version Create (4.0ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "4"], ["event", "create"], ["object_changes", "{\"id\":[null,4],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:42:56.468Z\"],\"updated_at\":[null,\"2020-03-13T20:42:56.468Z\"]}"], ["created_at", "2020-03-13 20:42:56.468894"]]
  [1m[35m (3.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:42:56.512669"], ["updated_at", "2020-03-13 20:42:56.512669"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "19"], ["event", "create"], ["object_changes", "{\"id\":[null,19],\"created_at\":[null,\"2020-03-13T20:42:56.512Z\"],\"updated_at\":[null,\"2020-03-13T20:42:56.512Z\"]}"], ["created_at", "2020-03-13 20:42:56.512669"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (1.2ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 19], ["created_at", "2020-03-13 20:42:56.524814"], ["updated_at", "2020-03-13 20:42:56.524814"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "19"], ["event", "create"], ["object_changes", "{\"id\":[null,19],\"buying_group_id\":[null,19],\"created_at\":[null,\"2020-03-13T20:42:56.524Z\"],\"updated_at\":[null,\"2020-03-13T20:42:56.524Z\"]}"], ["created_at", "2020-03-13 20:42:56.524814"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=19" for 127.0.0.1 at 2020-03-13 13:42:56 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"19"}
  [1m[35m (5.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>19' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '19'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>19' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '19'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>19' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '19'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>19' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '19'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>19' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '19'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>19' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '19'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "19"], ["LIMIT", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 14 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "19"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:42:56.524814' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "19"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 13 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "19"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.5ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
Completed 200 OK in 27ms (Views: 0.5ms | ActiveRecord: 8.7ms | Allocations: 4869)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (1.1ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:43:24.093161"], ["updated_at", "2020-03-13 20:43:24.093161"]]
  [1m[36mPaperTrail::Version Create (2.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "5"], ["event", "create"], ["object_changes", "{\"id\":[null,5],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:43:24.093Z\"],\"updated_at\":[null,\"2020-03-13T20:43:24.093Z\"]}"], ["created_at", "2020-03-13 20:43:24.093161"]]
  [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.9ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:43:24.134955"], ["updated_at", "2020-03-13 20:43:24.134955"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "20"], ["event", "create"], ["object_changes", "{\"id\":[null,20],\"created_at\":[null,\"2020-03-13T20:43:24.134Z\"],\"updated_at\":[null,\"2020-03-13T20:43:24.134Z\"]}"], ["created_at", "2020-03-13 20:43:24.134955"]]
  [1m[35m (6.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 20], ["created_at", "2020-03-13 20:43:24.156067"], ["updated_at", "2020-03-13 20:43:24.156067"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "20"], ["event", "create"], ["object_changes", "{\"id\":[null,20],\"buying_group_id\":[null,20],\"created_at\":[null,\"2020-03-13T20:43:24.156Z\"],\"updated_at\":[null,\"2020-03-13T20:43:24.156Z\"]}"], ["created_at", "2020-03-13 20:43:24.156067"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=20" for 127.0.0.1 at 2020-03-13 13:43:24 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"20"}
  [1m[35m (5.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>20' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '20'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>20' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '20'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>20' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '20'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>20' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '20'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>20' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '20'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>20' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '20'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "20"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 17 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "20"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:43:24.156067' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "20"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 16 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "20"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
Completed 200 OK in 47ms (Views: 0.4ms | ActiveRecord: 7.8ms | Allocations: 8066)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.9ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:44:42.161680"], ["updated_at", "2020-03-13 20:44:42.161680"]]
  [1m[36mPaperTrail::Version Create (3.8ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "6"], ["event", "create"], ["object_changes", "{\"id\":[null,6],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:44:42.161Z\"],\"updated_at\":[null,\"2020-03-13T20:44:42.161Z\"]}"], ["created_at", "2020-03-13 20:44:42.161680"]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:44:42.208256"], ["updated_at", "2020-03-13 20:44:42.208256"]]
  [1m[36mPaperTrail::Version Create (0.6ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "21"], ["event", "create"], ["object_changes", "{\"id\":[null,21],\"created_at\":[null,\"2020-03-13T20:44:42.208Z\"],\"updated_at\":[null,\"2020-03-13T20:44:42.208Z\"]}"], ["created_at", "2020-03-13 20:44:42.208256"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 21], ["created_at", "2020-03-13 20:44:42.222734"], ["updated_at", "2020-03-13 20:44:42.222734"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "21"], ["event", "create"], ["object_changes", "{\"id\":[null,21],\"buying_group_id\":[null,21],\"created_at\":[null,\"2020-03-13T20:44:42.222Z\"],\"updated_at\":[null,\"2020-03-13T20:44:42.222Z\"]}"], ["created_at", "2020-03-13 20:44:42.222734"]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=21" for 127.0.0.1 at 2020-03-13 13:44:42 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"21"}
  [1m[35m (5.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>21' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '21'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>21' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '21'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>21' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '21'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>21' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '21'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>21' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '21'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>21' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '21'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "21"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 20 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "21"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:44:42.222734' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "21"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 19 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "21"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
Completed 200 OK in 47ms (Views: 0.4ms | ActiveRecord: 7.8ms | Allocations: 8066)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (1.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.7ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:45:38.375196"], ["updated_at", "2020-03-13 20:45:38.375196"]]
  [1m[36mPaperTrail::Version Create (1.8ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "7"], ["event", "create"], ["object_changes", "{\"id\":[null,7],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:45:38.375Z\"],\"updated_at\":[null,\"2020-03-13T20:45:38.375Z\"]}"], ["created_at", "2020-03-13 20:45:38.375196"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:45:38.407674"], ["updated_at", "2020-03-13 20:45:38.407674"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "22"], ["event", "create"], ["object_changes", "{\"id\":[null,22],\"created_at\":[null,\"2020-03-13T20:45:38.407Z\"],\"updated_at\":[null,\"2020-03-13T20:45:38.407Z\"]}"], ["created_at", "2020-03-13 20:45:38.407674"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 22], ["created_at", "2020-03-13 20:45:38.427481"], ["updated_at", "2020-03-13 20:45:38.427481"]]
  [1m[36mPaperTrail::Version Create (0.5ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "22"], ["event", "create"], ["object_changes", "{\"id\":[null,22],\"buying_group_id\":[null,22],\"created_at\":[null,\"2020-03-13T20:45:38.427Z\"],\"updated_at\":[null,\"2020-03-13T20:45:38.427Z\"]}"], ["created_at", "2020-03-13 20:45:38.427481"]]
  [1m[35m (4.1ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=22" for 127.0.0.1 at 2020-03-13 13:45:38 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"22"}
  [1m[35m (4.6ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>22' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '22'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>22' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '22'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>22' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '22'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>22' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '22'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>22' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '22'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>22' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '22'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "22"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 23 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "22"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:45:38.427481' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "22"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 22 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "22"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 6.9ms | Allocations: 8062)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:45:59.410037"], ["updated_at", "2020-03-13 20:45:59.410037"]]
  [1m[36mPaperTrail::Version Create (1.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "8"], ["event", "create"], ["object_changes", "{\"id\":[null,8],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:45:59.410Z\"],\"updated_at\":[null,\"2020-03-13T20:45:59.410Z\"]}"], ["created_at", "2020-03-13 20:45:59.410037"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (1.1ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:45:59.438028"], ["updated_at", "2020-03-13 20:45:59.438028"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "23"], ["event", "create"], ["object_changes", "{\"id\":[null,23],\"created_at\":[null,\"2020-03-13T20:45:59.438Z\"],\"updated_at\":[null,\"2020-03-13T20:45:59.438Z\"]}"], ["created_at", "2020-03-13 20:45:59.438028"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 23], ["created_at", "2020-03-13 20:45:59.449738"], ["updated_at", "2020-03-13 20:45:59.449738"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "23"], ["event", "create"], ["object_changes", "{\"id\":[null,23],\"buying_group_id\":[null,23],\"created_at\":[null,\"2020-03-13T20:45:59.449Z\"],\"updated_at\":[null,\"2020-03-13T20:45:59.449Z\"]}"], ["created_at", "2020-03-13 20:45:59.449738"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=23" for 127.0.0.1 at 2020-03-13 13:45:59 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"23"}
  [1m[35m (3.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>23' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '23'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>23' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '23'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>23' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '23'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>23' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '23'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>23' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '23'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>23' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '23'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "23"], ["LIMIT", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 26 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "23"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:45:59.449738' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "23"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 25 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "23"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
Completed 200 OK in 23ms (Views: 0.3ms | ActiveRecord: 5.8ms | Allocations: 8062)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:46:16.718694"], ["updated_at", "2020-03-13 20:46:16.718694"]]
  [1m[36mPaperTrail::Version Create (1.9ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "9"], ["event", "create"], ["object_changes", "{\"id\":[null,9],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:46:16.718Z\"],\"updated_at\":[null,\"2020-03-13T20:46:16.718Z\"]}"], ["created_at", "2020-03-13 20:46:16.718694"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (1.2ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:46:16.749303"], ["updated_at", "2020-03-13 20:46:16.749303"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "24"], ["event", "create"], ["object_changes", "{\"id\":[null,24],\"created_at\":[null,\"2020-03-13T20:46:16.749Z\"],\"updated_at\":[null,\"2020-03-13T20:46:16.749Z\"]}"], ["created_at", "2020-03-13 20:46:16.749303"]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 24], ["created_at", "2020-03-13 20:46:16.761849"], ["updated_at", "2020-03-13 20:46:16.761849"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "24"], ["event", "create"], ["object_changes", "{\"id\":[null,24],\"buying_group_id\":[null,24],\"created_at\":[null,\"2020-03-13T20:46:16.761Z\"],\"updated_at\":[null,\"2020-03-13T20:46:16.761Z\"]}"], ["created_at", "2020-03-13 20:46:16.761849"]]
  [1m[35m (31.2ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=24" for 127.0.0.1 at 2020-03-13 13:46:16 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"24"}
  [1m[35m (3.9ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>24' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '24'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>24' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '24'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>24' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '24'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>24' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '24'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>24' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '24'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>24' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '24'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "24"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.9ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 29 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "24"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:46:16.761849' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "24"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 28 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "24"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
Completed 200 OK in 36ms (Views: 0.4ms | ActiveRecord: 6.4ms | Allocations: 8066)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:46:50.659495"], ["updated_at", "2020-03-13 20:46:50.659495"]]
  [1m[36mPaperTrail::Version Create (1.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "10"], ["event", "create"], ["object_changes", "{\"id\":[null,10],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:46:50.659Z\"],\"updated_at\":[null,\"2020-03-13T20:46:50.659Z\"]}"], ["created_at", "2020-03-13 20:46:50.659495"]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:46:50.689094"], ["updated_at", "2020-03-13 20:46:50.689094"]]
  [1m[36mPaperTrail::Version Create (5.0ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "25"], ["event", "create"], ["object_changes", "{\"id\":[null,25],\"created_at\":[null,\"2020-03-13T20:46:50.689Z\"],\"updated_at\":[null,\"2020-03-13T20:46:50.689Z\"]}"], ["created_at", "2020-03-13 20:46:50.689094"]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.9ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 25], ["created_at", "2020-03-13 20:46:50.707103"], ["updated_at", "2020-03-13 20:46:50.707103"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "25"], ["event", "create"], ["object_changes", "{\"id\":[null,25],\"buying_group_id\":[null,25],\"created_at\":[null,\"2020-03-13T20:46:50.707Z\"],\"updated_at\":[null,\"2020-03-13T20:46:50.707Z\"]}"], ["created_at", "2020-03-13 20:46:50.707103"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=25" for 127.0.0.1 at 2020-03-13 13:46:50 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"25"}
  [1m[35m (4.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>25' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '25'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>25' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '25'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>25' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '25'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>25' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '25'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>25' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '25'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>25' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '25'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "25"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 32 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "25"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:46:50.707103' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "25"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 31 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "25"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 6.8ms | Allocations: 8062)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:47:28.586327"], ["updated_at", "2020-03-13 20:47:28.586327"]]
  [1m[36mPaperTrail::Version Create (1.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "11"], ["event", "create"], ["object_changes", "{\"id\":[null,11],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:47:28.586Z\"],\"updated_at\":[null,\"2020-03-13T20:47:28.586Z\"]}"], ["created_at", "2020-03-13 20:47:28.586327"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:47:28.614855"], ["updated_at", "2020-03-13 20:47:28.614855"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "26"], ["event", "create"], ["object_changes", "{\"id\":[null,26],\"created_at\":[null,\"2020-03-13T20:47:28.614Z\"],\"updated_at\":[null,\"2020-03-13T20:47:28.614Z\"]}"], ["created_at", "2020-03-13 20:47:28.614855"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 26], ["created_at", "2020-03-13 20:47:28.627852"], ["updated_at", "2020-03-13 20:47:28.627852"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "26"], ["event", "create"], ["object_changes", "{\"id\":[null,26],\"buying_group_id\":[null,26],\"created_at\":[null,\"2020-03-13T20:47:28.627Z\"],\"updated_at\":[null,\"2020-03-13T20:47:28.627Z\"]}"], ["created_at", "2020-03-13 20:47:28.627852"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=26" for 127.0.0.1 at 2020-03-13 13:47:28 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"26"}
  [1m[35m (4.2ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>26' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '26'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>26' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '26'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>26' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '26'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>26' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '26'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>26' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '26'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>26' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '26'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "26"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 35 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "26"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:47:28.627852' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "26"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 34 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "26"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
Completed 200 OK in 40ms (Views: 0.3ms | ActiveRecord: 6.6ms | Allocations: 8066)
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.7ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:47:55.116686"], ["updated_at", "2020-03-13 20:47:55.116686"]]
  [1m[36mPaperTrail::Version Create (1.5ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "12"], ["event", "create"], ["object_changes", "{\"id\":[null,12],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:47:55.116Z\"],\"updated_at\":[null,\"2020-03-13T20:47:55.116Z\"]}"], ["created_at", "2020-03-13 20:47:55.116686"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.6ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:47:55.153179"], ["updated_at", "2020-03-13 20:47:55.153179"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "27"], ["event", "create"], ["object_changes", "{\"id\":[null,27],\"created_at\":[null,\"2020-03-13T20:47:55.153Z\"],\"updated_at\":[null,\"2020-03-13T20:47:55.153Z\"]}"], ["created_at", "2020-03-13 20:47:55.153179"]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 27], ["created_at", "2020-03-13 20:47:55.167166"], ["updated_at", "2020-03-13 20:47:55.167166"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "27"], ["event", "create"], ["object_changes", "{\"id\":[null,27],\"buying_group_id\":[null,27],\"created_at\":[null,\"2020-03-13T20:47:55.167Z\"],\"updated_at\":[null,\"2020-03-13T20:47:55.167Z\"]}"], ["created_at", "2020-03-13 20:47:55.167166"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=27" for 127.0.0.1 at 2020-03-13 13:47:55 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"27"}
  [1m[35m (5.4ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>27' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '27'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>27' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '27'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>27' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '27'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>27' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '27'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>27' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '27'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>27' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '27'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "27"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 38 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "27"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:47:55.167166' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "27"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 37 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "27"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
Completed 200 OK in 27ms (Views: 0.4ms | ActiveRecord: 7.6ms | Allocations: 8062)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:55:13.652877"], ["updated_at", "2020-03-13 20:55:13.652877"]]
  [1m[36mPaperTrail::Version Create (4.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "13"], ["event", "create"], ["object_changes", "{\"id\":[null,13],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:55:13.652Z\"],\"updated_at\":[null,\"2020-03-13T20:55:13.652Z\"]}"], ["created_at", "2020-03-13 20:55:13.652877"]]
  [1m[35m (3.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:55:13.692661"], ["updated_at", "2020-03-13 20:55:13.692661"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "28"], ["event", "create"], ["object_changes", "{\"id\":[null,28],\"created_at\":[null,\"2020-03-13T20:55:13.692Z\"],\"updated_at\":[null,\"2020-03-13T20:55:13.692Z\"]}"], ["created_at", "2020-03-13 20:55:13.692661"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 28], ["created_at", "2020-03-13 20:55:13.704978"], ["updated_at", "2020-03-13 20:55:13.704978"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "28"], ["event", "create"], ["object_changes", "{\"id\":[null,28],\"buying_group_id\":[null,28],\"created_at\":[null,\"2020-03-13T20:55:13.704Z\"],\"updated_at\":[null,\"2020-03-13T20:55:13.704Z\"]}"], ["created_at", "2020-03-13 20:55:13.704978"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=28" for 127.0.0.1 at 2020-03-13 13:55:13 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"28"}
  [1m[35m (4.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>28' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '28'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>28' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '28'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>28' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '28'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>28' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '28'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>28' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '28'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>28' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '28'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "28"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 41 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "28"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 28], ["LIMIT", 1]]
Completed 500 Internal Server Error in 20ms (ActiveRecord: 5.4ms | Allocations: 5392)
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:55:55.664804"], ["updated_at", "2020-03-13 20:55:55.664804"]]
  [1m[36mPaperTrail::Version Create (1.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "14"], ["event", "create"], ["object_changes", "{\"id\":[null,14],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:55:55.664Z\"],\"updated_at\":[null,\"2020-03-13T20:55:55.664Z\"]}"], ["created_at", "2020-03-13 20:55:55.664804"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:55:55.694149"], ["updated_at", "2020-03-13 20:55:55.694149"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "29"], ["event", "create"], ["object_changes", "{\"id\":[null,29],\"created_at\":[null,\"2020-03-13T20:55:55.694Z\"],\"updated_at\":[null,\"2020-03-13T20:55:55.694Z\"]}"], ["created_at", "2020-03-13 20:55:55.694149"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 29], ["created_at", "2020-03-13 20:55:55.705809"], ["updated_at", "2020-03-13 20:55:55.705809"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "29"], ["event", "create"], ["object_changes", "{\"id\":[null,29],\"buying_group_id\":[null,29],\"created_at\":[null,\"2020-03-13T20:55:55.705Z\"],\"updated_at\":[null,\"2020-03-13T20:55:55.705Z\"]}"], ["created_at", "2020-03-13 20:55:55.705809"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=29" for 127.0.0.1 at 2020-03-13 13:55:55 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"29"}
  [1m[35m (6.1ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>29' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '29'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>29' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '29'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>29' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '29'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>29' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '29'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>29' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '29'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>29' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '29'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "29"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 44 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "29"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 29], ["LIMIT", 1]]
Completed 500 Internal Server Error in 37ms (ActiveRecord: 7.3ms | Allocations: 7133)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.9ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:56:52.341703"], ["updated_at", "2020-03-13 20:56:52.341703"]]
  [1m[36mPaperTrail::Version Create (2.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "15"], ["event", "create"], ["object_changes", "{\"id\":[null,15],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:56:52.341Z\"],\"updated_at\":[null,\"2020-03-13T20:56:52.341Z\"]}"], ["created_at", "2020-03-13 20:56:52.341703"]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:56:52.375283"], ["updated_at", "2020-03-13 20:56:52.375283"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "30"], ["event", "create"], ["object_changes", "{\"id\":[null,30],\"created_at\":[null,\"2020-03-13T20:56:52.375Z\"],\"updated_at\":[null,\"2020-03-13T20:56:52.375Z\"]}"], ["created_at", "2020-03-13 20:56:52.375283"]]
  [1m[35m (4.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 30], ["created_at", "2020-03-13 20:56:52.391719"], ["updated_at", "2020-03-13 20:56:52.391719"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "30"], ["event", "create"], ["object_changes", "{\"id\":[null,30],\"buying_group_id\":[null,30],\"created_at\":[null,\"2020-03-13T20:56:52.391Z\"],\"updated_at\":[null,\"2020-03-13T20:56:52.391Z\"]}"], ["created_at", "2020-03-13 20:56:52.391719"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=30" for 127.0.0.1 at 2020-03-13 13:56:52 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"30"}
  [1m[35m (4.9ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>30' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '30'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>30' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '30'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>30' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '30'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>30' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '30'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>30' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '30'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>30' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '30'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "30"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 47 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "30"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:56:52.391719' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "30"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 46 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "30"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 30], ["LIMIT", 1]]
Completed 500 Internal Server Error in 45ms (ActiveRecord: 7.3ms | Allocations: 8467)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:58:17.900438"], ["updated_at", "2020-03-13 20:58:17.900438"]]
  [1m[36mPaperTrail::Version Create (1.5ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "16"], ["event", "create"], ["object_changes", "{\"id\":[null,16],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:58:17.900Z\"],\"updated_at\":[null,\"2020-03-13T20:58:17.900Z\"]}"], ["created_at", "2020-03-13 20:58:17.900438"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:58:17.929704"], ["updated_at", "2020-03-13 20:58:17.929704"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "31"], ["event", "create"], ["object_changes", "{\"id\":[null,31],\"created_at\":[null,\"2020-03-13T20:58:17.929Z\"],\"updated_at\":[null,\"2020-03-13T20:58:17.929Z\"]}"], ["created_at", "2020-03-13 20:58:17.929704"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 31], ["created_at", "2020-03-13 20:58:17.940937"], ["updated_at", "2020-03-13 20:58:17.940937"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "31"], ["event", "create"], ["object_changes", "{\"id\":[null,31],\"buying_group_id\":[null,31],\"created_at\":[null,\"2020-03-13T20:58:17.940Z\"],\"updated_at\":[null,\"2020-03-13T20:58:17.940Z\"]}"], ["created_at", "2020-03-13 20:58:17.940937"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=31" for 127.0.0.1 at 2020-03-13 13:58:17 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"31"}
  [1m[35m (4.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>31' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '31'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>31' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '31'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>31' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '31'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>31' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '31'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>31' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '31'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>31' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '31'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "31"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 50 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "31"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:58:17.940937' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "31"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 49 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "31"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
Completed 500 Internal Server Error in 39ms (ActiveRecord: 6.2ms | Allocations: 8474)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:58:32.592245"], ["updated_at", "2020-03-13 20:58:32.592245"]]
  [1m[36mPaperTrail::Version Create (1.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "17"], ["event", "create"], ["object_changes", "{\"id\":[null,17],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:58:32.592Z\"],\"updated_at\":[null,\"2020-03-13T20:58:32.592Z\"]}"], ["created_at", "2020-03-13 20:58:32.592245"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:58:32.620765"], ["updated_at", "2020-03-13 20:58:32.620765"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "32"], ["event", "create"], ["object_changes", "{\"id\":[null,32],\"created_at\":[null,\"2020-03-13T20:58:32.620Z\"],\"updated_at\":[null,\"2020-03-13T20:58:32.620Z\"]}"], ["created_at", "2020-03-13 20:58:32.620765"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 32], ["created_at", "2020-03-13 20:58:32.632105"], ["updated_at", "2020-03-13 20:58:32.632105"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "32"], ["event", "create"], ["object_changes", "{\"id\":[null,32],\"buying_group_id\":[null,32],\"created_at\":[null,\"2020-03-13T20:58:32.632Z\"],\"updated_at\":[null,\"2020-03-13T20:58:32.632Z\"]}"], ["created_at", "2020-03-13 20:58:32.632105"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=32" for 127.0.0.1 at 2020-03-13 13:58:32 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"32"}
  [1m[35m (4.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>32' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '32'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>32' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '32'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>32' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '32'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>32' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '32'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>32' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '32'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>32' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '32'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "32"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 53 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "32"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:58:32.632105' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "32"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 52 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "32"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
Completed 200 OK in 40ms (Views: 0.3ms | ActiveRecord: 6.4ms | Allocations: 8066)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:59:02.552615"], ["updated_at", "2020-03-13 20:59:02.552615"]]
  [1m[36mPaperTrail::Version Create (1.5ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "18"], ["event", "create"], ["object_changes", "{\"id\":[null,18],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:59:02.552Z\"],\"updated_at\":[null,\"2020-03-13T20:59:02.552Z\"]}"], ["created_at", "2020-03-13 20:59:02.552615"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:59:02.584913"], ["updated_at", "2020-03-13 20:59:02.584913"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "33"], ["event", "create"], ["object_changes", "{\"id\":[null,33],\"created_at\":[null,\"2020-03-13T20:59:02.584Z\"],\"updated_at\":[null,\"2020-03-13T20:59:02.584Z\"]}"], ["created_at", "2020-03-13 20:59:02.584913"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 33], ["created_at", "2020-03-13 20:59:02.597995"], ["updated_at", "2020-03-13 20:59:02.597995"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "33"], ["event", "create"], ["object_changes", "{\"id\":[null,33],\"buying_group_id\":[null,33],\"created_at\":[null,\"2020-03-13T20:59:02.597Z\"],\"updated_at\":[null,\"2020-03-13T20:59:02.597Z\"]}"], ["created_at", "2020-03-13 20:59:02.597995"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=33" for 127.0.0.1 at 2020-03-13 13:59:02 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"33"}
  [1m[35m (5.0ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>33' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '33'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>33' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '33'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>33' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '33'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>33' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '33'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>33' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '33'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>33' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '33'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "33"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 56 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "33"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:59:02.597995' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "33"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 55 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "33"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 7.1ms | Allocations: 8062)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 20:59:19.105065"], ["updated_at", "2020-03-13 20:59:19.105065"]]
  [1m[36mPaperTrail::Version Create (1.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "19"], ["event", "create"], ["object_changes", "{\"id\":[null,19],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T20:59:19.105Z\"],\"updated_at\":[null,\"2020-03-13T20:59:19.105Z\"]}"], ["created_at", "2020-03-13 20:59:19.105065"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (1.7ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 20:59:19.159118"], ["updated_at", "2020-03-13 20:59:19.159118"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "34"], ["event", "create"], ["object_changes", "{\"id\":[null,34],\"created_at\":[null,\"2020-03-13T20:59:19.159Z\"],\"updated_at\":[null,\"2020-03-13T20:59:19.159Z\"]}"], ["created_at", "2020-03-13 20:59:19.159118"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 34], ["created_at", "2020-03-13 20:59:19.171869"], ["updated_at", "2020-03-13 20:59:19.171869"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "34"], ["event", "create"], ["object_changes", "{\"id\":[null,34],\"buying_group_id\":[null,34],\"created_at\":[null,\"2020-03-13T20:59:19.171Z\"],\"updated_at\":[null,\"2020-03-13T20:59:19.171Z\"]}"], ["created_at", "2020-03-13 20:59:19.171869"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=34" for 127.0.0.1 at 2020-03-13 13:59:19 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"34"}
  [1m[35m (5.1ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>34' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '34'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>34' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '34'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>34' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '34'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>34' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '34'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>34' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '34'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>34' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '34'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "34"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 59 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "34"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 20:59:19.171869' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "34"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 58 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "34"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 7.4ms | Allocations: 4869)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:03:09.426428"], ["updated_at", "2020-03-13 21:03:09.426428"]]
  [1m[36mPaperTrail::Version Create (12.7ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "20"], ["event", "create"], ["object_changes", "{\"id\":[null,20],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:03:09.426Z\"],\"updated_at\":[null,\"2020-03-13T21:03:09.426Z\"]}"], ["created_at", "2020-03-13 21:03:09.426428"]]
  [1m[35m (5.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:03:09.488743"], ["updated_at", "2020-03-13 21:03:09.488743"]]
  [1m[36mPaperTrail::Version Create (0.9ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "35"], ["event", "create"], ["object_changes", "{\"id\":[null,35],\"created_at\":[null,\"2020-03-13T21:03:09.488Z\"],\"updated_at\":[null,\"2020-03-13T21:03:09.488Z\"]}"], ["created_at", "2020-03-13 21:03:09.488743"]]
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 35], ["created_at", "2020-03-13 21:03:09.498767"], ["updated_at", "2020-03-13 21:03:09.498767"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "35"], ["event", "create"], ["object_changes", "{\"id\":[null,35],\"buying_group_id\":[null,35],\"created_at\":[null,\"2020-03-13T21:03:09.498Z\"],\"updated_at\":[null,\"2020-03-13T21:03:09.498Z\"]}"], ["created_at", "2020-03-13 21:03:09.498767"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=35" for 127.0.0.1 at 2020-03-13 14:03:09 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"35"}
  [1m[35m (4.7ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>35' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '35'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>35' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '35'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>35' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '35'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>35' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '35'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>35' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '35'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>35' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '35'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "35"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 62 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "35"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:03:09.498767' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "35"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 61 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "35"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
Completed 200 OK in 20ms (Views: 0.3ms | ActiveRecord: 6.8ms | Allocations: 4869)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:03:30.974708"], ["updated_at", "2020-03-13 21:03:30.974708"]]
  [1m[36mPaperTrail::Version Create (2.9ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "21"], ["event", "create"], ["object_changes", "{\"id\":[null,21],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:03:30.974Z\"],\"updated_at\":[null,\"2020-03-13T21:03:30.974Z\"]}"], ["created_at", "2020-03-13 21:03:30.974708"]]
  [1m[35m (4.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:03:31.014755"], ["updated_at", "2020-03-13 21:03:31.014755"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "36"], ["event", "create"], ["object_changes", "{\"id\":[null,36],\"created_at\":[null,\"2020-03-13T21:03:31.014Z\"],\"updated_at\":[null,\"2020-03-13T21:03:31.014Z\"]}"], ["created_at", "2020-03-13 21:03:31.014755"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 36], ["created_at", "2020-03-13 21:03:31.041217"], ["updated_at", "2020-03-13 21:03:31.041217"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "36"], ["event", "create"], ["object_changes", "{\"id\":[null,36],\"buying_group_id\":[null,36],\"created_at\":[null,\"2020-03-13T21:03:31.041Z\"],\"updated_at\":[null,\"2020-03-13T21:03:31.041Z\"]}"], ["created_at", "2020-03-13 21:03:31.041217"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=36" for 127.0.0.1 at 2020-03-13 14:03:31 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"36"}
  [1m[35m (4.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>36' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '36'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>36' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '36'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>36' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '36'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>36' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '36'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>36' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '36'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>36' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '36'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "36"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 65 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "36"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 36], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 36], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:03:31.041217' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "36"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 64 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "36"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 36], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 36], ["LIMIT", 1]]
Completed 200 OK in 31ms (Views: 0.4ms | ActiveRecord: 6.8ms | Allocations: 8372)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:04:19.838724"], ["updated_at", "2020-03-13 21:04:19.838724"]]
  [1m[36mPaperTrail::Version Create (4.1ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "22"], ["event", "create"], ["object_changes", "{\"id\":[null,22],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:04:19.838Z\"],\"updated_at\":[null,\"2020-03-13T21:04:19.838Z\"]}"], ["created_at", "2020-03-13 21:04:19.838724"]]
  [1m[35m (3.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:04:19.877211"], ["updated_at", "2020-03-13 21:04:19.877211"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "37"], ["event", "create"], ["object_changes", "{\"id\":[null,37],\"created_at\":[null,\"2020-03-13T21:04:19.877Z\"],\"updated_at\":[null,\"2020-03-13T21:04:19.877Z\"]}"], ["created_at", "2020-03-13 21:04:19.877211"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 37], ["created_at", "2020-03-13 21:04:19.889663"], ["updated_at", "2020-03-13 21:04:19.889663"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "37"], ["event", "create"], ["object_changes", "{\"id\":[null,37],\"buying_group_id\":[null,37],\"created_at\":[null,\"2020-03-13T21:04:19.889Z\"],\"updated_at\":[null,\"2020-03-13T21:04:19.889Z\"]}"], ["created_at", "2020-03-13 21:04:19.889663"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=37" for 127.0.0.1 at 2020-03-13 14:04:19 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"37"}
  [1m[35m (4.6ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>37' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '37'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>37' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '37'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>37' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '37'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>37' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '37'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>37' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '37'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>37' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '37'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "37"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.4ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 68 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "37"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 37], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 37], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:04:19.889663' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "37"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 67 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "37"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 37], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 37], ["LIMIT", 1]]
Completed 200 OK in 42ms (Views: 0.3ms | ActiveRecord: 7.0ms | Allocations: 8066)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:04:29.677607"], ["updated_at", "2020-03-13 21:04:29.677607"]]
  [1m[36mPaperTrail::Version Create (1.9ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "23"], ["event", "create"], ["object_changes", "{\"id\":[null,23],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:04:29.677Z\"],\"updated_at\":[null,\"2020-03-13T21:04:29.677Z\"]}"], ["created_at", "2020-03-13 21:04:29.677607"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:04:29.713970"], ["updated_at", "2020-03-13 21:04:29.713970"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "38"], ["event", "create"], ["object_changes", "{\"id\":[null,38],\"created_at\":[null,\"2020-03-13T21:04:29.713Z\"],\"updated_at\":[null,\"2020-03-13T21:04:29.713Z\"]}"], ["created_at", "2020-03-13 21:04:29.713970"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 38], ["created_at", "2020-03-13 21:04:29.727333"], ["updated_at", "2020-03-13 21:04:29.727333"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "38"], ["event", "create"], ["object_changes", "{\"id\":[null,38],\"buying_group_id\":[null,38],\"created_at\":[null,\"2020-03-13T21:04:29.727Z\"],\"updated_at\":[null,\"2020-03-13T21:04:29.727Z\"]}"], ["created_at", "2020-03-13 21:04:29.727333"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=38" for 127.0.0.1 at 2020-03-13 14:04:29 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"38"}
  [1m[35m (4.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>38' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '38'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>38' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '38'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>38' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '38'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>38' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '38'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>38' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '38'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>38' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '38'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "38"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 71 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "38"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:04:29.727333' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "38"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 70 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "38"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
Completed 200 OK in 28ms (Views: 0.3ms | ActiveRecord: 6.9ms | Allocations: 8062)
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:04:59.021210"], ["updated_at", "2020-03-13 21:04:59.021210"]]
  [1m[36mPaperTrail::Version Create (3.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "24"], ["event", "create"], ["object_changes", "{\"id\":[null,24],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:04:59.021Z\"],\"updated_at\":[null,\"2020-03-13T21:04:59.021Z\"]}"], ["created_at", "2020-03-13 21:04:59.021210"]]
  [1m[35m (4.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:04:59.060431"], ["updated_at", "2020-03-13 21:04:59.060431"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "39"], ["event", "create"], ["object_changes", "{\"id\":[null,39],\"created_at\":[null,\"2020-03-13T21:04:59.060Z\"],\"updated_at\":[null,\"2020-03-13T21:04:59.060Z\"]}"], ["created_at", "2020-03-13 21:04:59.060431"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 39], ["created_at", "2020-03-13 21:04:59.073449"], ["updated_at", "2020-03-13 21:04:59.073449"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "39"], ["event", "create"], ["object_changes", "{\"id\":[null,39],\"buying_group_id\":[null,39],\"created_at\":[null,\"2020-03-13T21:04:59.073Z\"],\"updated_at\":[null,\"2020-03-13T21:04:59.073Z\"]}"], ["created_at", "2020-03-13 21:04:59.073449"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=39" for 127.0.0.1 at 2020-03-13 14:04:59 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"39"}
  [1m[35m (5.5ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>39' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '39'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>39' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '39'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>39' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '39'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>39' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '39'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>39' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '39'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>39' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '39'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "39"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 74 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "39"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 39], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 39], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:04:59.073449' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "39"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 73 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "39"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 39], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 39], ["LIMIT", 1]]
Completed 200 OK in 45ms (Views: 0.3ms | ActiveRecord: 7.7ms | Allocations: 8066)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:05:45.409200"], ["updated_at", "2020-03-13 21:05:45.409200"]]
  [1m[36mPaperTrail::Version Create (4.7ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "25"], ["event", "create"], ["object_changes", "{\"id\":[null,25],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:05:45.409Z\"],\"updated_at\":[null,\"2020-03-13T21:05:45.409Z\"]}"], ["created_at", "2020-03-13 21:05:45.409200"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:05:45.449641"], ["updated_at", "2020-03-13 21:05:45.449641"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "40"], ["event", "create"], ["object_changes", "{\"id\":[null,40],\"created_at\":[null,\"2020-03-13T21:05:45.449Z\"],\"updated_at\":[null,\"2020-03-13T21:05:45.449Z\"]}"], ["created_at", "2020-03-13 21:05:45.449641"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 40], ["created_at", "2020-03-13 21:05:45.465018"], ["updated_at", "2020-03-13 21:05:45.465018"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "40"], ["event", "create"], ["object_changes", "{\"id\":[null,40],\"buying_group_id\":[null,40],\"created_at\":[null,\"2020-03-13T21:05:45.465Z\"],\"updated_at\":[null,\"2020-03-13T21:05:45.465Z\"]}"], ["created_at", "2020-03-13 21:05:45.465018"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=40" for 127.0.0.1 at 2020-03-13 14:05:45 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"40"}
  [1m[35m (4.6ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>40' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '40'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>40' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '40'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>40' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '40'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>40' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '40'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>40' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '40'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>40' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '40'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "40"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 77 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "40"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.3ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 40], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 40], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:05:45.465018' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "40"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 76 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "40"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 40], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 40], ["LIMIT", 1]]
Completed 500 Internal Server Error in 42ms (ActiveRecord: 6.7ms | Allocations: 7835)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:05:55.876390"], ["updated_at", "2020-03-13 21:05:55.876390"]]
  [1m[36mPaperTrail::Version Create (1.8ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "26"], ["event", "create"], ["object_changes", "{\"id\":[null,26],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:05:55.876Z\"],\"updated_at\":[null,\"2020-03-13T21:05:55.876Z\"]}"], ["created_at", "2020-03-13 21:05:55.876390"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.6ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:05:55.906651"], ["updated_at", "2020-03-13 21:05:55.906651"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "41"], ["event", "create"], ["object_changes", "{\"id\":[null,41],\"created_at\":[null,\"2020-03-13T21:05:55.906Z\"],\"updated_at\":[null,\"2020-03-13T21:05:55.906Z\"]}"], ["created_at", "2020-03-13 21:05:55.906651"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 41], ["created_at", "2020-03-13 21:05:55.920719"], ["updated_at", "2020-03-13 21:05:55.920719"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "41"], ["event", "create"], ["object_changes", "{\"id\":[null,41],\"buying_group_id\":[null,41],\"created_at\":[null,\"2020-03-13T21:05:55.920Z\"],\"updated_at\":[null,\"2020-03-13T21:05:55.920Z\"]}"], ["created_at", "2020-03-13 21:05:55.920719"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=41" for 127.0.0.1 at 2020-03-13 14:05:55 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"41"}
  [1m[35m (5.1ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>41' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '41'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>41' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '41'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>41' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '41'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>41' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '41'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>41' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '41'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>41' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '41'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "41"], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 80 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "41"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.4ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:05:55.920719' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "41"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 79 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "41"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
Completed 500 Internal Server Error in 26ms (ActiveRecord: 7.4ms | Allocations: 7849)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:06:08.899842"], ["updated_at", "2020-03-13 21:06:08.899842"]]
  [1m[36mPaperTrail::Version Create (4.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "27"], ["event", "create"], ["object_changes", "{\"id\":[null,27],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:06:08.899Z\"],\"updated_at\":[null,\"2020-03-13T21:06:08.899Z\"]}"], ["created_at", "2020-03-13 21:06:08.899842"]]
  [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.4ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:06:08.938928"], ["updated_at", "2020-03-13 21:06:08.938928"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "42"], ["event", "create"], ["object_changes", "{\"id\":[null,42],\"created_at\":[null,\"2020-03-13T21:06:08.938Z\"],\"updated_at\":[null,\"2020-03-13T21:06:08.938Z\"]}"], ["created_at", "2020-03-13 21:06:08.938928"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 42], ["created_at", "2020-03-13 21:06:08.951356"], ["updated_at", "2020-03-13 21:06:08.951356"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "42"], ["event", "create"], ["object_changes", "{\"id\":[null,42],\"buying_group_id\":[null,42],\"created_at\":[null,\"2020-03-13T21:06:08.951Z\"],\"updated_at\":[null,\"2020-03-13T21:06:08.951Z\"]}"], ["created_at", "2020-03-13 21:06:08.951356"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=42" for 127.0.0.1 at 2020-03-13 14:06:08 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"42"}
  [1m[35m (4.7ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>42' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '42'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>42' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '42'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>42' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '42'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>42' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '42'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>42' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '42'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>42' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '42'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "42"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 83 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "42"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:06:08.951356' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "42"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 82 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "42"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
Completed 500 Internal Server Error in 25ms (ActiveRecord: 6.5ms | Allocations: 7849)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:06:38.742875"], ["updated_at", "2020-03-13 21:06:38.742875"]]
  [1m[36mPaperTrail::Version Create (4.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "28"], ["event", "create"], ["object_changes", "{\"id\":[null,28],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:06:38.742Z\"],\"updated_at\":[null,\"2020-03-13T21:06:38.742Z\"]}"], ["created_at", "2020-03-13 21:06:38.742875"]]
  [1m[35m (4.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:06:38.779878"], ["updated_at", "2020-03-13 21:06:38.779878"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "43"], ["event", "create"], ["object_changes", "{\"id\":[null,43],\"created_at\":[null,\"2020-03-13T21:06:38.779Z\"],\"updated_at\":[null,\"2020-03-13T21:06:38.779Z\"]}"], ["created_at", "2020-03-13 21:06:38.779878"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 43], ["created_at", "2020-03-13 21:06:38.791805"], ["updated_at", "2020-03-13 21:06:38.791805"]]
  [1m[36mPaperTrail::Version Create (0.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "43"], ["event", "create"], ["object_changes", "{\"id\":[null,43],\"buying_group_id\":[null,43],\"created_at\":[null,\"2020-03-13T21:06:38.791Z\"],\"updated_at\":[null,\"2020-03-13T21:06:38.791Z\"]}"], ["created_at", "2020-03-13 21:06:38.791805"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=43" for 127.0.0.1 at 2020-03-13 14:06:38 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"43"}
  [1m[35m (3.8ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>43' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '43'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>43' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '43'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>43' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '43'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>43' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '43'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>43' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '43'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>43' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '43'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "43"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 86 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "43"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 43], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 43], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:06:38.791805' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "43"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 85 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "43"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 43], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 43], ["LIMIT", 1]]
Completed 500 Internal Server Error in 23ms (ActiveRecord: 5.6ms | Allocations: 7857)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:07:05.093018"], ["updated_at", "2020-03-13 21:07:05.093018"]]
  [1m[36mPaperTrail::Version Create (3.6ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "29"], ["event", "create"], ["object_changes", "{\"id\":[null,29],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:07:05.093Z\"],\"updated_at\":[null,\"2020-03-13T21:07:05.093Z\"]}"], ["created_at", "2020-03-13 21:07:05.093018"]]
  [1m[35m (4.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:07:05.145001"], ["updated_at", "2020-03-13 21:07:05.145001"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "44"], ["event", "create"], ["object_changes", "{\"id\":[null,44],\"created_at\":[null,\"2020-03-13T21:07:05.145Z\"],\"updated_at\":[null,\"2020-03-13T21:07:05.145Z\"]}"], ["created_at", "2020-03-13 21:07:05.145001"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 44], ["created_at", "2020-03-13 21:07:05.157499"], ["updated_at", "2020-03-13 21:07:05.157499"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "44"], ["event", "create"], ["object_changes", "{\"id\":[null,44],\"buying_group_id\":[null,44],\"created_at\":[null,\"2020-03-13T21:07:05.157Z\"],\"updated_at\":[null,\"2020-03-13T21:07:05.157Z\"]}"], ["created_at", "2020-03-13 21:07:05.157499"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=44" for 127.0.0.1 at 2020-03-13 14:07:05 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"44"}
  [1m[35m (4.6ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>44' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '44'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>44' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '44'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>44' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '44'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>44' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '44'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>44' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '44'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>44' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '44'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "44"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 89 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "44"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.4ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 44], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 44], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.5ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:07:05.157499' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "44"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.5ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 88 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "44"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.5ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 44], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 44], ["LIMIT", 1]]
Completed 200 OK in 32ms (Views: 0.4ms | ActiveRecord: 7.7ms | Allocations: 8062)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:07:18.731648"], ["updated_at", "2020-03-13 21:07:18.731648"]]
  [1m[36mPaperTrail::Version Create (1.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "30"], ["event", "create"], ["object_changes", "{\"id\":[null,30],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:07:18.731Z\"],\"updated_at\":[null,\"2020-03-13T21:07:18.731Z\"]}"], ["created_at", "2020-03-13 21:07:18.731648"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:07:18.760333"], ["updated_at", "2020-03-13 21:07:18.760333"]]
  [1m[36mPaperTrail::Version Create (1.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "45"], ["event", "create"], ["object_changes", "{\"id\":[null,45],\"created_at\":[null,\"2020-03-13T21:07:18.760Z\"],\"updated_at\":[null,\"2020-03-13T21:07:18.760Z\"]}"], ["created_at", "2020-03-13 21:07:18.760333"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 45], ["created_at", "2020-03-13 21:07:18.777022"], ["updated_at", "2020-03-13 21:07:18.777022"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "45"], ["event", "create"], ["object_changes", "{\"id\":[null,45],\"buying_group_id\":[null,45],\"created_at\":[null,\"2020-03-13T21:07:18.777Z\"],\"updated_at\":[null,\"2020-03-13T21:07:18.777Z\"]}"], ["created_at", "2020-03-13 21:07:18.777022"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=45" for 127.0.0.1 at 2020-03-13 14:07:18 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"45"}
  [1m[35m (5.2ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>45' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '45'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>45' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '45'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>45' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '45'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>45' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '45'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>45' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '45'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>45' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '45'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "45"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 92 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "45"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:07:18.777022' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "45"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 91 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "45"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
Completed 500 Internal Server Error in 26ms (ActiveRecord: 7.2ms | Allocations: 7858)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:07:40.850728"], ["updated_at", "2020-03-13 21:07:40.850728"]]
  [1m[36mPaperTrail::Version Create (1.7ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "31"], ["event", "create"], ["object_changes", "{\"id\":[null,31],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:07:40.850Z\"],\"updated_at\":[null,\"2020-03-13T21:07:40.850Z\"]}"], ["created_at", "2020-03-13 21:07:40.850728"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.5ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:07:40.881314"], ["updated_at", "2020-03-13 21:07:40.881314"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "46"], ["event", "create"], ["object_changes", "{\"id\":[null,46],\"created_at\":[null,\"2020-03-13T21:07:40.881Z\"],\"updated_at\":[null,\"2020-03-13T21:07:40.881Z\"]}"], ["created_at", "2020-03-13 21:07:40.881314"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.5ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 46], ["created_at", "2020-03-13 21:07:40.907935"], ["updated_at", "2020-03-13 21:07:40.907935"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "46"], ["event", "create"], ["object_changes", "{\"id\":[null,46],\"buying_group_id\":[null,46],\"created_at\":[null,\"2020-03-13T21:07:40.907Z\"],\"updated_at\":[null,\"2020-03-13T21:07:40.907Z\"]}"], ["created_at", "2020-03-13 21:07:40.907935"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=46" for 127.0.0.1 at 2020-03-13 14:07:40 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"46"}
  [1m[35m (5.1ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>46' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '46'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>46' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '46'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>46' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '46'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>46' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '46'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>46' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '46'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>46' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '46'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "46"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 95 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "46"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:07:40.907935' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "46"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 94 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "46"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
Completed 500 Internal Server Error in 45628ms (ActiveRecord: 7.0ms | Allocations: 26375)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:08:31.530721"], ["updated_at", "2020-03-13 21:08:31.530721"]]
  [1m[36mPaperTrail::Version Create (1.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "32"], ["event", "create"], ["object_changes", "{\"id\":[null,32],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:08:31.530Z\"],\"updated_at\":[null,\"2020-03-13T21:08:31.530Z\"]}"], ["created_at", "2020-03-13 21:08:31.530721"]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:08:31.560399"], ["updated_at", "2020-03-13 21:08:31.560399"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "47"], ["event", "create"], ["object_changes", "{\"id\":[null,47],\"created_at\":[null,\"2020-03-13T21:08:31.560Z\"],\"updated_at\":[null,\"2020-03-13T21:08:31.560Z\"]}"], ["created_at", "2020-03-13 21:08:31.560399"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 47], ["created_at", "2020-03-13 21:08:31.572283"], ["updated_at", "2020-03-13 21:08:31.572283"]]
  [1m[36mPaperTrail::Version Create (1.0ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "47"], ["event", "create"], ["object_changes", "{\"id\":[null,47],\"buying_group_id\":[null,47],\"created_at\":[null,\"2020-03-13T21:08:31.572Z\"],\"updated_at\":[null,\"2020-03-13T21:08:31.572Z\"]}"], ["created_at", "2020-03-13 21:08:31.572283"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=47" for 127.0.0.1 at 2020-03-13 14:08:31 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"47"}
  [1m[35m (4.3ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>47' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '47'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>47' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '47'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>47' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '47'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>47' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '47'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>47' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '47'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>47' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '47'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "47"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 98 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "47"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:08:31.572283' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "47"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 97 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "47"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.4ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 47], ["LIMIT", 1]]
Completed 200 OK in 3508ms (Views: 3485.4ms | ActiveRecord: 6.4ms | Allocations: 13844)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:10:01.044862"], ["updated_at", "2020-03-13 21:10:01.044862"]]
  [1m[36mPaperTrail::Version Create (1.4ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "33"], ["event", "create"], ["object_changes", "{\"id\":[null,33],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:10:01.044Z\"],\"updated_at\":[null,\"2020-03-13T21:10:01.044Z\"]}"], ["created_at", "2020-03-13 21:10:01.044862"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:10:01.071698"], ["updated_at", "2020-03-13 21:10:01.071698"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "48"], ["event", "create"], ["object_changes", "{\"id\":[null,48],\"created_at\":[null,\"2020-03-13T21:10:01.071Z\"],\"updated_at\":[null,\"2020-03-13T21:10:01.071Z\"]}"], ["created_at", "2020-03-13 21:10:01.071698"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.4ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 48], ["created_at", "2020-03-13 21:10:01.082482"], ["updated_at", "2020-03-13 21:10:01.082482"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "48"], ["event", "create"], ["object_changes", "{\"id\":[null,48],\"buying_group_id\":[null,48],\"created_at\":[null,\"2020-03-13T21:10:01.082Z\"],\"updated_at\":[null,\"2020-03-13T21:10:01.082Z\"]}"], ["created_at", "2020-03-13 21:10:01.082482"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=48" for 127.0.0.1 at 2020-03-13 14:10:01 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"48"}
  [1m[35m (4.6ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>48' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '48'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>48' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '48'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>48' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '48'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>48' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '48'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>48' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '48'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>48' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '48'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "48"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 101 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "48"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 48], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 48], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:10:01.082482' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "48"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 100 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "48"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 48], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 48], ["LIMIT", 1]]
Completed 200 OK in 22ms (Views: 0.3ms | ActiveRecord: 6.5ms | Allocations: 7963)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:11:14.858184"], ["updated_at", "2020-03-13 21:11:14.858184"]]
  [1m[36mPaperTrail::Version Create (1.5ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "34"], ["event", "create"], ["object_changes", "{\"id\":[null,34],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:11:14.858Z\"],\"updated_at\":[null,\"2020-03-13T21:11:14.858Z\"]}"], ["created_at", "2020-03-13 21:11:14.858184"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:11:14.899794"], ["updated_at", "2020-03-13 21:11:14.899794"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "49"], ["event", "create"], ["object_changes", "{\"id\":[null,49],\"created_at\":[null,\"2020-03-13T21:11:14.899Z\"],\"updated_at\":[null,\"2020-03-13T21:11:14.899Z\"]}"], ["created_at", "2020-03-13 21:11:14.899794"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.6ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 49], ["created_at", "2020-03-13 21:11:14.908133"], ["updated_at", "2020-03-13 21:11:14.908133"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "49"], ["event", "create"], ["object_changes", "{\"id\":[null,49],\"buying_group_id\":[null,49],\"created_at\":[null,\"2020-03-13T21:11:14.908Z\"],\"updated_at\":[null,\"2020-03-13T21:11:14.908Z\"]}"], ["created_at", "2020-03-13 21:11:14.908133"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=49" for 127.0.0.1 at 2020-03-13 14:11:14 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"49"}
  [1m[35m (4.0ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>49' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '49'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>49' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '49'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>49' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '49'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>49' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '49'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>49' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '49'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>49' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '49'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "49"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 104 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "49"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 49], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 49], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:11:14.908133' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "49"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 103 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "49"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.3ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 49], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 49], ["LIMIT", 1]]
Completed 200 OK in 18ms (Views: 0.3ms | ActiveRecord: 5.9ms | Allocations: 4770)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.8ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:14:53.755717"], ["updated_at", "2020-03-13 21:14:53.755717"]]
  [1m[36mPaperTrail::Version Create (1.5ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "35"], ["event", "create"], ["object_changes", "{\"id\":[null,35],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:14:53.755Z\"],\"updated_at\":[null,\"2020-03-13T21:14:53.755Z\"]}"], ["created_at", "2020-03-13 21:14:53.755717"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:14:53.798689"], ["updated_at", "2020-03-13 21:14:53.798689"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "50"], ["event", "create"], ["object_changes", "{\"id\":[null,50],\"created_at\":[null,\"2020-03-13T21:14:53.798Z\"],\"updated_at\":[null,\"2020-03-13T21:14:53.798Z\"]}"], ["created_at", "2020-03-13 21:14:53.798689"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (1.3ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 50], ["created_at", "2020-03-13 21:14:53.807324"], ["updated_at", "2020-03-13 21:14:53.807324"]]
  [1m[36mPaperTrail::Version Create (0.3ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "50"], ["event", "create"], ["object_changes", "{\"id\":[null,50],\"buying_group_id\":[null,50],\"created_at\":[null,\"2020-03-13T21:14:53.807Z\"],\"updated_at\":[null,\"2020-03-13T21:14:53.807Z\"]}"], ["created_at", "2020-03-13 21:14:53.807324"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=50" for 127.0.0.1 at 2020-03-13 14:14:53 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"50"}
  [1m[35m (5.2ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>50' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '50'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>50' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '50'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>50' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '50'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>50' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '50'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>50' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '50'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>50' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '50'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "50"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 107 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "50"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 50], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 50], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:14:53.807324' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "50"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.3ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 106 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "50"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.4ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 50], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 50], ["LIMIT", 1]]
Completed 200 OK in 19ms (Views: 0.3ms | ActiveRecord: 7.3ms | Allocations: 4770)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "schema_sha1"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Dustin"], ["created_at", "2020-03-13 21:36:58.867583"], ["updated_at", "2020-03-13 21:36:58.867583"]]
  [1m[36mPaperTrail::Version Create (1.6ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "User"], ["item_id", "36"], ["event", "create"], ["object_changes", "{\"id\":[null,36],\"name\":[null,\"Dustin\"],\"created_at\":[null,\"2020-03-13T21:36:58.867Z\"],\"updated_at\":[null,\"2020-03-13T21:36:58.867Z\"]}"], ["created_at", "2020-03-13 21:36:58.867583"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mBuyingGroup Create (0.3ms)[0m  [1m[32mINSERT INTO "buying_groups" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2020-03-13 21:36:58.911673"], ["updated_at", "2020-03-13 21:36:58.911673"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "BuyingGroup"], ["item_id", "51"], ["event", "create"], ["object_changes", "{\"id\":[null,51],\"created_at\":[null,\"2020-03-13T21:36:58.911Z\"],\"updated_at\":[null,\"2020-03-13T21:36:58.911Z\"]}"], ["created_at", "2020-03-13 21:36:58.911673"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mCustomer Create (0.7ms)[0m  [1m[32mINSERT INTO "customers" ("buying_group_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["buying_group_id", 51], ["created_at", "2020-03-13 21:36:58.920394"], ["updated_at", "2020-03-13 21:36:58.920394"]]
  [1m[36mPaperTrail::Version Create (0.2ms)[0m  [1m[32mINSERT INTO "versions" ("item_type", "item_id", "event", "object_changes", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["item_type", "Customer"], ["item_id", "51"], ["event", "create"], ["object_changes", "{\"id\":[null,51],\"buying_group_id\":[null,51],\"created_at\":[null,\"2020-03-13T21:36:58.920Z\"],\"updated_at\":[null,\"2020-03-13T21:36:58.920Z\"]}"], ["created_at", "2020-03-13 21:36:58.920394"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started GET "/related_changes?type=Customer&id=51" for 127.0.0.1 at 2020-03-13 14:36:58 -0700
Processing by PaperTrail::RelatedChanges::BaseController#show as HTML
  Parameters: {"type"=>"Customer", "id"=>"51"}
  [1m[35m (4.6ms)[0m  [1m[34mSELECT json_agg(hierarchy_versions ORDER BY (rank, item_type, item_id, id)) AS versions,
       MIN(hierarchy_versions.created_at) as created_at,
       request_id
   FROM (SELECT hierarchy.id, hierarchy.item_type, hierarchy.item_id, hierarchy.event, hierarchy.whodunnit, hierarchy.object, hierarchy.object_changes, hierarchy.request_id, hierarchy.created_at,
  CASE event
  WHEN 'create' THEN 1
  WHEN 'update' THEN 2
  WHEN 'destroy' THEN 3
  ELSE 4 END as rank
FROM (SELECT 'Customer=>51' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '51'

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>51' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '51'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)

UNION
SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>51' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '51'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>51' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '51'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'order_id' ->> 1)::TEXT, (children.object ->> 'order_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT parents.tree || '.' || children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>51' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '51'
) parents
JOIN versions children ON parents.item_id = COALESCE((children.object_changes -> 'customer_id' ->> 1)::TEXT, (children.object ->> 'customer_id')::TEXT)
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)

UNION
SELECT parents.tree || '.' ||  children.item_type || '=>' || children.item_id as tree, children.id, children.item_type, children.item_id, children.event, children.whodunnit, children.object, children.object_changes, children.request_id, children.created_at
FROM (SELECT 'Customer=>51' as tree, versions.id, versions.item_type, versions.item_id, versions.event, versions.whodunnit, versions.object, versions.object_changes, versions.request_id, versions.created_at
FROM versions
WHERE versions.item_type = 'Customer'
  AND versions.item_id = '51'
) parents
  JOIN versions children ON  parents.item_id = COALESCE((children.object_changes -> 'notable_id' ->> 1)::TEXT, (children.object ->> 'notable_id')::TEXT)
AND parents.item_type = COALESCE((children.object_changes -> 'notable_type' ->> 1)::TEXT, (children.object ->> 'notable_type')::TEXT)
) hierarchy
) AS hierarchy_versions
   GROUP BY request_id
   ORDER BY created_at DESC
   LIMIT 1000
[0m
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "51"], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 110 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "Customer"], ["item_id", "51"], ["LIMIT", 1]]
  [1m[36mCustomer Load (0.2ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
  [1m[36mCACHE Customer Load (0.0ms)[0m  [1m[34mSELECT "customers".* FROM "customers" WHERE "customers"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."created_at" < '2020-03-13 21:36:58.920394' AND "versions"."item_id" = $1 AND "versions"."item_type" = $2 ORDER BY "versions"."created_at" DESC LIMIT $3[0m  [["item_id", "51"], ["item_type", "BuyingGroup"], ["LIMIT", 1]]
  [1m[36mPaperTrail::Version Load (0.2ms)[0m  [1m[34mSELECT "versions".* FROM "versions" WHERE "versions"."item_type" = $1 AND "versions"."item_id" = $2 AND "versions"."id" > 109 ORDER BY "versions"."id" ASC LIMIT $3[0m  [["item_type", "BuyingGroup"], ["item_id", "51"], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.2ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
  [1m[36mBuyingGroup Load (0.1ms)[0m  [1m[34mSELECT "buying_groups".* FROM "buying_groups" WHERE "buying_groups"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
Completed 200 OK in 18ms (Views: 0.3ms | ActiveRecord: 6.5ms | Allocations: 4770)
